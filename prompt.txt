
В торговой сети ООП есть три вида магазинов: 
мини-маркеты — работают только по будним дням,
магазины выходного дня — работают только по субботам и воскресеньям,
non-stop маркеты — эти магазины работают ежедневно.
Для покупателей написана программа, с помощью которой покупатель может 
определить, работает ли определённый магазин в заданную дату.
В коде 
объявлен родительский класс Store, описывающий «магазин в общем».

В этом классе

атрибут address принимает адрес магазина;
метод get_info() принимает на вход строку с датой в формате ДД.ММ.ГГГГ и 
возвращает информацию, открыт ли магазин в указанный день;
приватный метод __is_open() принимает на вход объект даты; это метод-заглушка, 
его нужно переопределить в дочерних классах;
объявлены, но не описаны три класса-наследника: MiniStore, WeekendStore и 
NonStopStore.
Допишите программу.
Что нужно сделать
в родительском классе Store допишите метод get_info() так, чтобы этот метод 
возвращал информацию о том, работает ли конкретный магазин в указанный день;
в дочерних классах MiniStore, WeekendStore и NonStopStore переопределите метод 
__is_open() так, чтобы он возвращал True в том случае, если в указанную дату 
магазин работает.
Например, для даты 30.03.2024 (это суббота) метод __is_open() в дочерних 
классах должен работать так:
Если дату 30.03.2024 передать в метод __is_open() класса MiniStore — метод 
должен вернуть False (по субботам минимаркеты не работают).
Если дату 30.03.2024 передать в метод __is_open() класса WeekendStore — метод 
должен вернуть True (магазины выходного дня работают по субботам и воскресеньям).
Если дату 30.03.2024 передать в метод __is_open() класса NonStopStore — метод 
должен вернуть True (такие магазины работают вообще всегда, в любой день).
Лайфхаки
Обращайте внимание на аннотации типов: они помогут разобраться, какие данные 
должен вернуть тот или иной метод.
Возможно, решать задание будет проще в настольном редакторе кода. Скопируйте 
исходный код в редактор и пользуйтесь всеми его преимуществами — например, 
подсказками и линтерами.

Без библиотеки datetime в этой задаче не обойтись.
Чтобы в дочернем классе переопределить метод родительского класса — в дочернем 
классе нужно описать метод с тем же именем и новым содержимым.
Чтобы преобразовать строку с датой в объект типа datetime — примените метод 
datetime.strptime() и передайте в него строку с датой и шаблон даты %d.%m.%Y.
Чтобы получить день недели из объекта datetime — примените метод weekday().