Класс Employee
Базовая информация о сотрудниках описана в классе Employee. 
Атрибут класса vacation_days хранит количество дней отпуска: по умолчанию 
каждому сотруднику положено 28 дней отпуска, это значение неизменно. 
Атрибуты экземпляра класса описывают имя, фамилию, пол и количество оставшихся 
дней отпуска сотрудника. 
Метод consume_vacation() принимает на вход количество дней отпуска, запрошенных 
сотрудником, и изменяет значение атрибута remaining_vacation_days — количество 
оставшихся дней отпуска у сотрудника.
Метод get_remaining_vacation_days() возвращает количество оставшихся дней 
отпуска сотрудника.
Задача 1
В класс Employee надо добавить 
защищённый атрибут экземпляра — id сотрудника (employee_id);
приватный метод __generate_employee_id, который будет генерировать employee_id
 с помощью встроенной функции hash(). Значение employee_id должно быть 
 сгенерировано из строки, полученной в результате конкатенации имени, 
 фамилии и пола.
Класс OfficeEmployee
Штатные сотрудники описаны в классе OfficeEmployee. Каждому сотруднику присвоен 
определённый разряд. От разряда зависит продолжительность отпуска.
За каждый разряд штатному сотруднику предоставляется по два дополнительных дня 
отпуска. Так, сотруднику 1-го разряда к отпуску добавляется 2 дня, а сотруднику 
с 4-м разрядом — 8 дней. 
При расчётах дополнительные дни должны прибавляться к значению 
remaining_vacation_days — количеству оставшихся дней отпуска.
Задача 2
Класс OfficeEmployee нужно расширить:
добавить атрибут экземпляра worker_class — разряд сотрудника;
переопределить remaining_vacation_days — добавить к этому значению 
дополнительные дни отпуска в зависимости от worker_class.
добавить приватный атрибут экземпляра salary — зарплату сотрудника;
добавить метод get_vacation_payment() — этот метод
принимает на вход количество дней отпуска, запрошенных сотрудником,
возвращает размер отпускных выплат. За каждый день отпуска сотрудник 
должен получить 1/60 часть своей зарплаты; результат вычислений должен 
быть приведён к целому числу.


Имена защищённых атрибутов и методов должны начинаться с одиночного 
подчёркивания, например _secure. Имена приватных атрибутов и методов 
должны начинаться с двойного подчёркивания: __private.
Для генерации идентификатора сотрудника используйте такой синтаксис: 
hash(self.first_name + self.last_name + self.gender).
В классе OfficeEmployee новое значение remaining_vacation_days должно 
быть равно сумме vacation_days и worker_class * 2.